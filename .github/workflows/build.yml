name: build
on: 
  push:
    branches:
      - 'master'
jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn -B -ntp package
    - name: Build distribution image
      run: mvn -B -ntp -P image install
    - name: Login to Docker Hub
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build amd64 image
      run: |
        cd webapp
        docker build -f Dockerfile.amd64 -t manorrock/ocelot:amd64-latest .
        docker push manorrock/ocelot:amd64-latest
    - name: Build arm32v6 image
      run: |
        cd webapp
        docker build -f Dockerfile.arm32v6 -t manorrock/ocelot:arm32v6-latest .
        docker push manorrock/ocelot:arm32v6-latest
    - name: Push Docker manifest
      run: |
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create manorrock/ocelot:latest \
          manorrock/ocelot:amd64-latest \
          manorrock/ocelot:arm32v6-latest
        docker manifest annotate manorrock/ocelot:latest \
          manorrock/ocelot:amd64-latest --os linux --arch amd64
        docker manifest annotate manorrock/ocelot:latest \
          manorrock/ocelot:arm32v6-latest --os linux --arch arm
        docker manifest push manorrock/ocelot:latest
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn -B -ntp package
    - name: Build image
      run: mvn -B -ntp -P image install
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
    - name: Build project
      run: mvn -B -ntp install
    - name: Create JLink image
      run: mvn -B -ntp -P image install
    - name: Create .tar.gz distribution
      run: mvn -B -ntp -P distribution install
    - name: Deploy .tar.gz distribution
      run: |
        cd cli-macos
        mvn -B -ntp deploy
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
